syntax = "proto3";

package user;

service UserService {
  rpc CreateUser (CreateUserRequest) returns (CreateUserResponse) {}
  rpc TestUser (TestUserRequest) returns (TestUserRequestResponse) {}
  rpc UpdateUserBalance (UpdateUserBalanceRequest) returns (UpdateUserBalanceResponse) {}
  rpc GetUserByUserId (GetUserByUserIdRequest) returns (GetUserByUserIdResponse) {}
  rpc DeleteUser (DeleteUserRequest) returns (DeleteUserResponse) {}
  rpc ListAllUsers (ListAllUsersRequest) returns (ListAllUsersResponse) {}
}

message UserData {
  int32 id = 1;
  string email = 2;
  int32 userId = 3;
  string role = 4;
  double balance = 5;
}

// get Users Info
message ListAllUsersRequest {
}

message ListAllUsersResponse {
  int32 status = 1;
  repeated string error = 2;
  repeated UserData data = 3;
}

// create User
message CreateUserRequest {
  string email = 1;
  int32 userId = 2;
  string role = 3;
}

message CreateUserResponse {
  int32 status = 1;
  repeated string error = 2;
  int32 id = 3;
}


// create User
message UpdateUserBalanceRequest {
  int32 userId = 1;
  string operation = 2;
  double amount = 3;
}

message UpdateUserBalanceResponse {
  int32 status = 1;
  repeated string error = 2;
  int32 userId = 3;
  double balance = 4;
}


// get User by userId
message GetUserByUserIdRequest {
  int32 userId = 1;
}

message GetUserByUserIdResponse {
  int32 status = 1;
  repeated string error = 2;
  UserData data = 3;
}

// get User by userId
message DeleteUserRequest {
  int32 userId = 1;
}

message DeleteUserResponse {
  int32 status = 1;
  repeated string error = 2;
}


// get Users Info
message TestUserRequest {
}

message TestUserRequestResponse {
  int32 status = 1;
}
